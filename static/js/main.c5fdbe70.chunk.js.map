{"version":3,"sources":["board.js","robot.js","game.js","index.js"],"names":["Square","props","className","value","onClick","Board","i","this","squares","renderSquare","React","Component","calculateDraw","filter","e","length","winNextMove","calculateWinner","lines","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","current","gameStatus","setState","concat","doubleWinMove","emptyCorners","move","Math","floor","random","winnerMove","console","log","centers","corners","robotMove","handleClick","step","moves","map","difference","x","desc","jumpTo","statusText","winner","draw","shouldWeContinuePlaying","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5fdbe70.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n    return (\n        <button className={'square ' + props.value} onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","export function calculateDraw(squares) {\n    if (squares.filter(function (e) {\n        return e === null;\n    }).length < 2) {\n        if (!squares[winNextMove(squares)]) {\n            return true;\n        }\n    }\n}\n\nexport function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport function winNextMove(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && !squares[c]) {\n            return c\n        } else if (squares[a] && squares[a] === squares[c] && !squares[b]) {\n            return b;\n        } else if (squares[b] && squares[b] === squares[c] && !squares[a]) {\n            return a;\n        }\n    }\n\n    return false;\n}\n","import React from 'react';\nimport Board from './board.js'\nimport { calculateDraw, calculateWinner, winNextMove } from './robot.js';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null)\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    gameStatus() {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        return [history, current, squares];\n    }\n\n    handleClick(i) {\n        const [history, , squares] = this.gameStatus();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    robotMove() {\n        const [, , squares] = this.gameStatus();\n        const doubleWinMove = [(squares[0] === 'X'), (squares[2] === 'X'), (squares[6] === 'X'), (squares[8] === 'X')].filter(function (e) {\n            return e === true;\n        }).length > 1;\n        const emptyCorners = [!squares[0], !squares[2], !squares[6], !squares[8]].filter(function (e) {\n            return e === true;\n        }).length;\n\n        var move = Math.floor(Math.random() * 8);\n        var winnerMove = winNextMove(squares);\n\n        if ((winnerMove && !squares[winnerMove]) || winnerMove === 0) {\n            console.log('WinnerMove');\n\n            move = winnerMove;\n        } else if (!squares[4]) {\n            console.log('takeCenter');\n\n            move = 4;\n        } else if (doubleWinMove && emptyCorners > 0) {\n            console.log('blockDoubleWinMove');\n\n            var centers = [1, 3, 5, 7];\n            move = centers[Math.floor(Math.random() * centers.length)];\n        } else if (!squares[0] || !squares[2] || !squares[6] || !squares[8]) {\n            console.log('takeCorner');\n\n            var corners = [0, 2, 6, 8];\n            move = corners[Math.floor(Math.random() * corners.length)];\n        }\n\n        if (!squares[move]) {\n            this.handleClick(move);\n        } else {\n            this.robotMove();\n        }\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const [history, current] = this.gameStatus();\n\n        const moves = history.map((step, move) => {\n            let difference;\n            if (move){\n                difference = step.squares.map((e, i) => e !== history[move - 1].squares[i] ? i + 1 : null).filter(x => x)[0]\n            }\n\n            const desc = move ?\n                `Go to move # ${move} :: ${(move % 2) ? 'X' : 'O'} to ${difference}` :\n                'Go to game start';\n\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{this.statusText(current)}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n\n    statusText(current) {\n        const winner = calculateWinner(current.squares);\n        const draw = calculateDraw(current.squares);\n\n        let status;\n        if (winner) {\n            status = `Winner: ${winner}`;\n        } else if (draw) {\n            status = 'It is a boring draw';\n        } else {\n            status = `Next player: ${(this.state.xIsNext ? 'X' : 'O')}`;\n        }\n\n        return status;\n    }\n\n    shouldWeContinuePlaying() {\n        const [, , squares] = this.gameStatus();\n        return (!this.state.xIsNext && !calculateDraw(squares) && !calculateWinner(squares));\n    }\n\n    componentDidMount() {\n        if (this.shouldWeContinuePlaying()) {\n            this.robotMove();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.shouldWeContinuePlaying()) {\n            this.robotMove();\n        }\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './game.js'\nimport './index.css';\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}